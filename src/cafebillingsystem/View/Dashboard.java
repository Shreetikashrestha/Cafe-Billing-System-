/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package cafebillingsystem.View;

import javax.swing.border.Border;
import javax.swing.border.MatteBorder;
import javax.swing.*;
import java.awt.*;
import java.awt.Color;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;

/**
 *
 * @author Diwas
 */
public class Dashboard extends javax.swing.JFrame {

    /**
     * Creates new form Dashboard
     */
    public Dashboard() {
        initComponents();
        createProductTable();
        fetchAndSetPrices();
    }
    //Remove the border of the entry
    Border bottomBorder = new MatteBorder(0, 0, 0, 0, Color.white);

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menu2 = new java.awt.Menu();
        menuBar2 = new java.awt.MenuBar();
        menu3 = new java.awt.Menu();
        menu4 = new java.awt.Menu();
        menuBar3 = new java.awt.MenuBar();
        menu5 = new java.awt.Menu();
        menu6 = new java.awt.Menu();
        menuBar4 = new java.awt.MenuBar();
        menu7 = new java.awt.Menu();
        menu8 = new java.awt.Menu();
        menuBar5 = new java.awt.MenuBar();
        menu9 = new java.awt.Menu();
        menu10 = new java.awt.Menu();
        popupMenu1 = new java.awt.PopupMenu();
        jDialog1 = new javax.swing.JDialog();
        buttonGroup1 = new javax.swing.ButtonGroup();
        rightPanel = new javax.swing.JPanel();
        billPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        editButton = new javax.swing.JButton();
        calculateButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        viewButton = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        momoLabel = new javax.swing.JLabel();
        momo_price = new javax.swing.JLabel();
        momoComboBox = new javax.swing.JComboBox<>();
        coffeeLabel = new javax.swing.JLabel();
        coffeeComboBox = new javax.swing.JComboBox<>();
        coffee_price = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        cokeComboBox = new javax.swing.JComboBox<>();
        teaLabel = new javax.swing.JLabel();
        tea_price = new javax.swing.JLabel();
        teaComboBox = new javax.swing.JComboBox<>();
        cokeLabel = new javax.swing.JLabel();
        coke_price = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        burgerLabel = new javax.swing.JLabel();
        grilledchickenLabel = new javax.swing.JLabel();
        burgerComboBox = new javax.swing.JComboBox<>();
        grilled_chicken_price = new javax.swing.JLabel();
        burger_price = new javax.swing.JLabel();
        grilledchickenComboBox = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();

        menu1.setLabel("File");
        menuBar1.add(menu1);

        menu2.setLabel("Edit");
        menuBar1.add(menu2);

        menu3.setLabel("File");
        menuBar2.add(menu3);

        menu4.setLabel("Edit");
        menuBar2.add(menu4);

        menu5.setLabel("File");
        menuBar3.add(menu5);

        menu6.setLabel("Edit");
        menuBar3.add(menu6);

        menu7.setLabel("File");
        menuBar4.add(menu7);

        menu8.setLabel("Edit");
        menuBar4.add(menu8);

        menu9.setLabel("File");
        menuBar5.add(menu9);

        menu10.setLabel("Edit");
        menuBar5.add(menu10);

        popupMenu1.setLabel("popupMenu1");

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 204, 204));
        setBounds(new java.awt.Rectangle(150, 75, 1000, 600));
        setResizable(false);

        rightPanel.setBackground(new java.awt.Color(76, 175, 80));

        billPanel.setBackground(new java.awt.Color(76, 175, 80));

        javax.swing.GroupLayout billPanelLayout = new javax.swing.GroupLayout(billPanel);
        billPanel.setLayout(billPanelLayout);
        billPanelLayout.setHorizontalGroup(
            billPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 355, Short.MAX_VALUE)
        );
        billPanelLayout.setVerticalGroup(
            billPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 310, Short.MAX_VALUE)
        );

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Bauhaus 93", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Cafe Billing System");

        editButton.setBackground(new java.awt.Color(255, 255, 0));
        editButton.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        editButton.setForeground(new java.awt.Color(0, 0, 0));
        editButton.setBorderPainted(false);
        editButton.setText("Edit");
        editButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        calculateButton.setBackground(new java.awt.Color(255, 255, 0));
        calculateButton.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        calculateButton.setForeground(new java.awt.Color(0, 0, 0));
        calculateButton.setBorderPainted(false);
        calculateButton.setText("Calculate");
        calculateButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        calculateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateButtonActionPerformed(evt);
            }
        });

        clearButton.setBackground(new java.awt.Color(255, 0, 0));
        clearButton.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        clearButton.setForeground(new java.awt.Color(255, 255, 255));
        clearButton.setBorderPainted(false);
        clearButton.setText("Clear");
        clearButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        saveButton.setBackground(new java.awt.Color(51, 204, 255));
        saveButton.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        saveButton.setForeground(new java.awt.Color(255, 255, 255));
        saveButton.setBorderPainted(false);
        saveButton.setText("Save");
        saveButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(255, 255, 0));
        deleteButton.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(0, 0, 0));
        deleteButton.setBorderPainted(false);
        deleteButton.setText("Delete");
        deleteButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        viewButton.setBackground(new java.awt.Color(255, 255, 0));
        viewButton.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        viewButton.setForeground(new java.awt.Color(0, 0, 0));
        viewButton.setBorderPainted(false);
        viewButton.setText("View");
        viewButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rightPanelLayout = new javax.swing.GroupLayout(rightPanel);
        rightPanel.setLayout(rightPanelLayout);
        rightPanelLayout.setHorizontalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightPanelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rightPanelLayout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rightPanelLayout.createSequentialGroup()
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(88, 88, 88))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rightPanelLayout.createSequentialGroup()
                        .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(billPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(rightPanelLayout.createSequentialGroup()
                                .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(viewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(calculateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18))))
        );
        rightPanelLayout.setVerticalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rightPanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addGap(37, 37, 37)
                .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editButton)
                    .addComponent(viewButton)
                    .addComponent(calculateButton)
                    .addComponent(deleteButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(billPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(clearButton))
                .addGap(35, 35, 35))
        );

        jLabel15.setFont(new java.awt.Font("Matura MT Script Capitals", 1, 36)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(76, 175, 80));
        jLabel15.setText("CAFE");

        momoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cafebillingsystem/View/momo.png"))); // NOI18N
        momoLabel.setText("momo");
        momoLabel.setMaximumSize(new java.awt.Dimension(150, 150));
        momoLabel.setMinimumSize(new java.awt.Dimension(150, 150));
        momoLabel.setPreferredSize(new java.awt.Dimension(150, 150));

        momo_price.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        momo_price.setForeground(new java.awt.Color(0, 0, 0));
        momo_price.setText("$200");

        momoComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25" }));
        momoComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        coffeeLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cafebillingsystem/View/coffee.png"))); // NOI18N
        coffeeLabel.setText("coffee");
        coffeeLabel.setMaximumSize(new java.awt.Dimension(150, 150));
        coffeeLabel.setMinimumSize(new java.awt.Dimension(150, 150));
        coffeeLabel.setPreferredSize(new java.awt.Dimension(150, 150));

        coffeeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25" }));
        coffeeComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        coffee_price.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        coffee_price.setForeground(new java.awt.Color(0, 0, 0));
        coffee_price.setText("$100");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(coffee_price)
                        .addGap(58, 58, 58))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(momo_price)
                        .addGap(52, 52, 52))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(coffeeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(coffeeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(momoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(momoComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(momoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(momo_price)
                .addGap(18, 18, 18)
                .addComponent(momoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(coffeeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(coffee_price)
                .addGap(7, 7, 7)
                .addComponent(coffeeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        cokeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25" }));
        cokeComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        teaLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cafebillingsystem/View/tea.png"))); // NOI18N
        teaLabel.setText("tea");
        teaLabel.setMaximumSize(new java.awt.Dimension(150, 150));
        teaLabel.setMinimumSize(new java.awt.Dimension(150, 150));
        teaLabel.setPreferredSize(new java.awt.Dimension(150, 150));

        tea_price.setBackground(new java.awt.Color(0, 0, 0));
        tea_price.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        tea_price.setForeground(new java.awt.Color(0, 0, 0));
        tea_price.setText("$50");

        teaComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25" }));
        teaComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        cokeLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cafebillingsystem/View/coke.png"))); // NOI18N
        cokeLabel.setText("coke");
        cokeLabel.setMaximumSize(new java.awt.Dimension(150, 150));
        cokeLabel.setMinimumSize(new java.awt.Dimension(150, 150));
        cokeLabel.setPreferredSize(new java.awt.Dimension(150, 150));

        coke_price.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        coke_price.setForeground(new java.awt.Color(0, 0, 0));
        coke_price.setText("$50");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(coke_price))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(tea_price))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(teaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(cokeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(teaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cokeLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(teaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tea_price)
                .addGap(18, 18, 18)
                .addComponent(teaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cokeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(coke_price)
                .addGap(7, 7, 7)
                .addComponent(cokeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        burgerLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cafebillingsystem/View/burger.png"))); // NOI18N
        burgerLabel.setText("burger");
        burgerLabel.setMaximumSize(new java.awt.Dimension(150, 150));
        burgerLabel.setMinimumSize(new java.awt.Dimension(150, 150));
        burgerLabel.setPreferredSize(new java.awt.Dimension(150, 150));

        grilledchickenLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cafebillingsystem/View/grilledchicken.png"))); // NOI18N
        grilledchickenLabel.setText("grilledchicken");
        grilledchickenLabel.setMaximumSize(new java.awt.Dimension(150, 150));
        grilledchickenLabel.setMinimumSize(new java.awt.Dimension(150, 150));
        grilledchickenLabel.setPreferredSize(new java.awt.Dimension(150, 150));

        burgerComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25" }));
        burgerComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        grilled_chicken_price.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        grilled_chicken_price.setForeground(new java.awt.Color(0, 0, 0));
        grilled_chicken_price.setText("$500");

        burger_price.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        burger_price.setForeground(new java.awt.Color(0, 0, 0));
        burger_price.setText("$300");

        grilledchickenComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25" }));
        grilledchickenComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(burger_price)
                        .addGap(50, 50, 50))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(grilled_chicken_price)
                        .addGap(56, 56, 56))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(burgerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(burgerComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(grilledchickenComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(grilledchickenLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(grilledchickenLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(grilled_chicken_price)
                .addGap(18, 18, 18)
                .addComponent(grilledchickenComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(burgerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(burger_price)
                .addGap(7, 7, 7)
                .addComponent(burgerComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel16.setFont(new java.awt.Font("Bauhaus 93", 1, 36)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(76, 175, 80));
        jLabel16.setText("HAMRO");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(33, 33, 33)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15)
                        .addGap(175, 175, 175)))
                .addComponent(rightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public String generateBillNumber() {
    Random random = new Random();
    int randomNumber = random.nextInt(1000, 100000);
    char randomAlphabet = (char) ('A' + random.nextInt(26));
    return String.format("%d%c", randomNumber, randomAlphabet);
    
    }
    public void createProductTable() {
        try {
            String url = "jdbc:mysql://localhost:3306/hamrocafe";
            String userName = "root";
            String password = "Bk2k5@#$";
            Connection conn = DriverManager.getConnection(url, userName, password);
            Statement st = conn.createStatement();

            String createTableQuery = "CREATE TABLE IF NOT EXISTS products (product_id INT PRIMARY KEY, product_name VARCHAR(50), product_price INT)";
            st.executeUpdate(createTableQuery);

            // Check if the 'products' table contains any records
            String checkRecordsQuery = "SELECT COUNT(*) FROM products";
            ResultSet rs = st.executeQuery(checkRecordsQuery);
            rs.next();
            int count = rs.getInt(1);

            if (count == 0) {
                // Arrays for product id, name, and price
                int[] productId = {101, 102, 103, 104, 105, 106};
                String[] productName = {"tea", "momo", "grilled_chicken", "coke", "coffee", "burger"};
                int[] productPrice = {50, 200, 300, 50, 100, 400};

                // Prepare the SQL insert query
                String insertQuery = "INSERT INTO products(product_id, product_name, product_price) VALUES (?, ?, ?)";
                PreparedStatement pstm = conn.prepareStatement(insertQuery);

                // Looping the arrays and insert each product
                int len = productId.length;
                for (int i = 0; i <=len-1; i++) {
                    pstm.setInt(1, productId[i]);
                    pstm.setString(2, productName[i]);
                    pstm.setInt(3, productPrice[i]);
                    pstm.addBatch();
                }

                // Execute the batch of inserts
                pstm.executeBatch();
            }

            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    
    private void fetchAndSetPrices() {
        try {
            String url = "jdbc:mysql://localhost:3306/hamrocafe";
            String userName = "root";
            String password = "Bk2k5@#$";
            Connection conn = DriverManager.getConnection(url, userName, password);

            String[] products = {"tea", "momo", "grilled_chicken", "coke", "coffee", "burger"};
            JLabel[] labels = {tea_price, momo_price, grilled_chicken_price, coke_price, coffee_price, burger_price};

            for (int i = 0; i < products.length; i++) {
                String fetchQuery = "SELECT product_price FROM products WHERE product_name = ?";
                PreparedStatement fetchStmt = conn.prepareStatement(fetchQuery);
                fetchStmt.setString(1, products[i]);
                ResultSet rs = fetchStmt.executeQuery();

                if (rs.next()) {
                    int price = rs.getInt("product_price");
                    labels[i].setText("$" + price);
                }
            }

            conn.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    
    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        // TODO add your handling code here:
        billPanel.removeAll();
        billPanel.setBackground(new Color(76,175,80));
        BillDetails bd = new BillDetails();
        bd.setVisible(true);
        this.dispose();
        billPanel.revalidate();
        billPanel.repaint();
    }//GEN-LAST:event_viewButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        billPanel.removeAll();
        billPanel.setBackground(Color.yellow);
        
        // Label for Delete Bill
        JLabel billNoLabel = new JLabel("Bill No");
        billNoLabel.setFont(new Font("Times New Roman", Font.BOLD, 16));
        billNoLabel .setBounds(50, 32, 120, 20);
        billPanel.add(billNoLabel );
        
        //TextField to billNo to delete
        JTextField billNoTextField = new JTextField();
        billNoTextField.setBounds(150, 30, 150, 25);
        billNoTextField.setBorder(bottomBorder);
        billPanel.add(billNoTextField);
        
        //Button to Delete Bill
        JButton deleteButton = new JButton("Delete");
        deleteButton.setBackground(Color.red);
        deleteButton.setForeground(Color.white);
        deleteButton.setBounds(180, 80, 80, 30);
        deleteButton.setCursor(new Cursor(Cursor.HAND_CURSOR));
        deleteButton.setBorder(bottomBorder);
        billPanel.add(deleteButton);
        
        billPanel.revalidate();
        billPanel.repaint();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        // Capture and save image
        SwingUtilities.invokeLater(() -> {
            try {
                BufferedImage image = new BufferedImage(billPanel.getWidth(), billPanel.getHeight(), BufferedImage.TYPE_INT_RGB);
                billPanel.paint(image.getGraphics());

                // Create the folder on the desktop
                String userHome = System.getProperty("user.home");
                File directory = new File(userHome + "/Desktop/CafeBills");
                if (!directory.exists()) {
                    directory.mkdir();
                }
                // Generate bill number
                String billNumber = generateBillNumber();
                // Save the image in the folder
                File file = new File(directory, "Bill_" + billNumber + ".png");
                ImageIO.write(image, "png", file);
                System.out.println("Image saved to: " + file.getAbsolutePath());
            } catch (IOException e) {
                e.printStackTrace();
            }
        });
        JOptionPane.showMessageDialog(this, "Saved!", "Done", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_saveButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        teaComboBox.setSelectedIndex(0);
        momoComboBox.setSelectedIndex(0);
        grilledchickenComboBox.setSelectedIndex(0);
        cokeComboBox.setSelectedIndex(0);
        coffeeComboBox.setSelectedIndex(0);
        burgerComboBox.setSelectedIndex(0);
        billPanel.removeAll();
        billPanel.revalidate();
        billPanel.repaint();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void calculateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateButtonActionPerformed
        // TODO add your handling code here:
        billPanel.removeAll();
        billPanel.setBackground(Color.white);

        // Brand Name
        JLabel brandName = new JLabel("Hamro Cafe");
        brandName.setFont(new Font("Times New Roman", Font.BOLD, 20));
        brandName.setForeground(new Color(76, 175, 80));
        brandName.setBounds(125, 20, 500, 25);
        billPanel.add(brandName);

        // Generate random bill number (e.g., 2345X, 5647Y)
        String billNumber = generateBillNumber();
        System.out.println("Generated Bill Number: " + billNumber);

        JLabel billNoLabel = new JLabel("Bill No: " + billNumber);
        billNoLabel.setFont(new Font("Arial", Font.BOLD, 14));
        billNoLabel.setBounds(50, 50, 150, 20);
        billPanel.add(billNoLabel);

        // Headline for Items and Prices
        JLabel itemLabel = new JLabel("Item");
        itemLabel.setFont(new Font("Arial", Font.BOLD, 14));
        itemLabel.setBounds(50, 75, 100, 20);
        billPanel.add(itemLabel);

        JLabel quantityLabel = new JLabel("Quantity");
        quantityLabel.setFont(new Font("Arial", Font.BOLD, 14));
        quantityLabel.setBounds(170, 75, 100, 20);
        billPanel.add(quantityLabel);

        JLabel priceLabel = new JLabel("Price");
        priceLabel.setFont(new Font("Arial", Font.BOLD, 14));
        priceLabel.setBounds(275, 75, 100, 20);
        billPanel.add(priceLabel);

        // Fetch prices from database and calculate total price for each item
        String[] items = {"tea", "momo", "grilled_chicken", "coke", "coffee", "burger"};
        int[] quantities = {teaComboBox.getSelectedIndex(), momoComboBox.getSelectedIndex(), grilledchickenComboBox.getSelectedIndex(), cokeComboBox.getSelectedIndex(), coffeeComboBox.getSelectedIndex(), burgerComboBox.getSelectedIndex()};
        int[] prices = new int[items.length];
        int[] totalPrices = new int[items.length];

        try {
            // Establish database connection
            String url = "jdbc:mysql://localhost:3306/hamrocafe";
            String userName = "root";
            String password = "Bk2k5@#$";
            Connection conn = DriverManager.getConnection(url, userName, password);

            // Query to fetch prices for items
            for (int i = 0; i < items.length; i++) {
                String query = "SELECT product_price FROM products WHERE product_name = ?";
                PreparedStatement pstmt = conn.prepareStatement(query);
                pstmt.setString(1, items[i]);
                ResultSet rs = pstmt.executeQuery();
                if (rs.next()) {
                    prices[i] = rs.getInt("product_price");
                    totalPrices[i] = quantities[i] * prices[i];

                    // Display item, quantity, price, and total price
                    JLabel itemNameLabel = new JLabel(items[i]);
                    itemNameLabel.setBounds(50, 100 + i * 25, 100, 20);
                    billPanel.add(itemNameLabel);

                    JLabel itemQuantityLabel = new JLabel(String.valueOf(quantities[i]));
                    itemQuantityLabel.setBounds(175, 100 + i * 25, 100, 20);
                    billPanel.add(itemQuantityLabel);

                    JLabel itemPriceLabel = new JLabel(String.valueOf(totalPrices[i]));
                    itemPriceLabel.setBounds(275, 100 + i * 25, 100, 20);
                    billPanel.add(itemPriceLabel);
                    
                }
                pstmt.close();
                rs.close();
            }
            conn.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
            // Handle SQLException as needed
        }
        // Calculate total price
        int totalPrice = 0;
        for (int i = 0; i < totalPrices.length; i++) {
            totalPrice += totalPrices[i];
        }
        // Display total price
        JLabel totalPriceLabel = new JLabel("Total Price: $" + totalPrice);
        totalPriceLabel.setFont(new Font("Arial", Font.BOLD, 14));
        totalPriceLabel.setBounds(225, 275, 150, 20);
        billPanel.add(totalPriceLabel);

        // Refresh billPanel
        billPanel.revalidate();
        billPanel.repaint();
    }//GEN-LAST:event_calculateButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        billPanel.removeAll();
        billPanel.setBackground(Color.yellow);
        
        // Label for select item and Set pRICE
        JLabel selectItemLabel = new JLabel("Select Item");
        selectItemLabel.setFont(new Font("Times New Roman", Font.BOLD, 16));
        selectItemLabel.setBounds(40, 30, 120, 20);
        billPanel.add(selectItemLabel);

        JLabel setPriceLabel = new JLabel("Set Price");
        setPriceLabel.setFont(new Font("Times New Roman", Font.BOLD, 16));
        setPriceLabel.setBounds(40, 75, 120, 20);
        billPanel.add(setPriceLabel);

        //ComboBox to set the price
        String [] plustwo = {"Tea", "Momo", "Grilled Chicken", "Coke", "Coffee", "Burger"};
        JComboBox<String> editPriceComboBox = new JComboBox<>(plustwo);
        editPriceComboBox.setBounds(150, 30, 150, 25);
        billPanel.add(editPriceComboBox);

        //TextField to set the price
        JTextField setPriceTextField = new JTextField();
        setPriceTextField.setBounds(150, 75, 150, 25);
        setPriceTextField.setBorder(bottomBorder);
        billPanel.add(setPriceTextField);

        //Button to Update Price
        JButton updateButton = new JButton("Update");
        updateButton.setBackground(new Color(76,175,80));
        updateButton.setForeground(Color.white);
        updateButton.setBounds(180, 125, 80, 30);
        updateButton.setCursor(new Cursor(Cursor.HAND_CURSOR));
        updateButton.setBorder(bottomBorder);
        billPanel.add(updateButton);
        
        
        // Event listener for Update button to update the price
        updateButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String selectedItem = (String) editPriceComboBox.getSelectedItem();
                int newPrice = Integer.parseInt(setPriceTextField.getText());
                try {
                    String url = "jdbc:mysql://localhost:3306/hamrocafe";
                    String userName = "root";
                    String password = "Bk2k5@#$";
                    Connection conn = DriverManager.getConnection(url, userName, password);
                    String query = "UPDATE products SET product_price = ? WHERE product_name = ?";
                    PreparedStatement pstm = conn.prepareStatement(query);
                    pstm.setInt(1, newPrice);
                    pstm.setString(2, selectedItem.toLowerCase().replace(" ", "_"));
                    pstm.executeUpdate();
                    // Update GUI labels based on product name
                    switch (selectedItem) {
                        case "Tea":
                            tea_price.setText("$" + String.valueOf(newPrice));
                            break;
                        case "Momo":
                            momo_price.setText("$" + String.valueOf(newPrice));
                            break;
                        case "Grilled Chicken":
                            grilled_chicken_price.setText("$" + String.valueOf(newPrice));
                            break;
                        case "Coke":
                            coke_price.setText("$" + String.valueOf(newPrice));
                            break;
                        case "Coffee":
                            coffee_price.setText("$" + String.valueOf(newPrice));
                            break;
                        case "Burger":
                            burger_price.setText("$" + String.valueOf(newPrice));
                            break;
                        default:
                            break;
                    }
                    // Clear the set price text field
                    setPriceTextField.setText("");
                    conn.close();
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
            }
        });
        
        billPanel.revalidate();
        billPanel.repaint();
    }//GEN-LAST:event_editButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel billPanel;
    private javax.swing.JComboBox<String> burgerComboBox;
    private javax.swing.JLabel burgerLabel;
    protected javax.swing.JLabel burger_price;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton calculateButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JComboBox<String> coffeeComboBox;
    private javax.swing.JLabel coffeeLabel;
    protected javax.swing.JLabel coffee_price;
    private javax.swing.JComboBox<String> cokeComboBox;
    private javax.swing.JLabel cokeLabel;
    protected javax.swing.JLabel coke_price;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    protected javax.swing.JLabel grilled_chicken_price;
    private javax.swing.JComboBox<String> grilledchickenComboBox;
    private javax.swing.JLabel grilledchickenLabel;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private java.awt.Menu menu1;
    private java.awt.Menu menu10;
    private java.awt.Menu menu2;
    private java.awt.Menu menu3;
    private java.awt.Menu menu4;
    private java.awt.Menu menu5;
    private java.awt.Menu menu6;
    private java.awt.Menu menu7;
    private java.awt.Menu menu8;
    private java.awt.Menu menu9;
    private java.awt.MenuBar menuBar1;
    private java.awt.MenuBar menuBar2;
    private java.awt.MenuBar menuBar3;
    private java.awt.MenuBar menuBar4;
    private java.awt.MenuBar menuBar5;
    private javax.swing.JComboBox<String> momoComboBox;
    private javax.swing.JLabel momoLabel;
    protected javax.swing.JLabel momo_price;
    private java.awt.PopupMenu popupMenu1;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JButton saveButton;
    private javax.swing.JComboBox<String> teaComboBox;
    private javax.swing.JLabel teaLabel;
    protected javax.swing.JLabel tea_price;
    private javax.swing.JButton viewButton;
    // End of variables declaration//GEN-END:variables
}
